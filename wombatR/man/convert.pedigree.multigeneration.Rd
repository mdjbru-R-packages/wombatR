% Generated by roxygen2 (4.0.1): do not edit by hand
\name{convert.pedigree.multigeneration}
\alias{convert.pedigree.multigeneration}
\title{Convert parents and offspring identities to unique identities}
\usage{
convert.pedigree.multigeneration(data, animal.id, father.id, mother.id)
}
\arguments{
\item{data}{a \code{data.frame} containing the data. The id should be
integers. Id set to 0 are considered as NA.}

\item{animal.id,father.id,mother.id}{the names of the columns containing the
  animal, father and mother identity information (\code{strings})}
}
\value{
A \code{data.frame} with the same data with updated id.
}
\description{
Convert a pedigree with independent numbering for the identities
  of parents and offsprings to a multigeneration compatible
  pedigree, where identical numbers are not shared between different
  individuals between the offspring and parent columns.
}
\details{
Convert the id for animal, father and mother from an independent
  format (i.e. id start at 1 for animal, father and mother) to
  a multigeneration compatible format (i.e. no overlap between
  offspring and parent identities).

  Note: 0 in id is considered as NA.

  IMPORTANT: This should NOT be used on multigeneration pedigrees
  where offspring and parents id are related, since such relations
  will be broken during the recoding of the id.
}
\examples{
# generate a random pedigree structure for 20 offsprings, using 5 different
# sires and 7 different dams
set.seed(4)
animal_id = 1:20
sire_id = sample(1:5, size = 20, replace = T)
dam_id = sample(1:7, size = 20, replace = T)

# generate some random traits
weight = rnorm(n = 20, mean = 50)
length = rnorm(n = 20, mean = 100)

# assemble the information into one data frame
ped_pheno_data = data.frame(animal_id, sire_id, dam_id, weight, length)
ped_pheno_data

# convert the pedigree part of the data frame
ped_pheno_data2 = convert.pedigree.multigeneration(data = ped_pheno_data,
  animal.id = "animal_id", father.id = "sire_id", mother.id = "dam_id")
ped_pheno_data2
}

